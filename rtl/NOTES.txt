
   assign spcadr = (spcnt && spush) ? spcptr_p1 : spcptr;

should be registered at end of STATE_ALU

------------

brad@mwave:~/cpus/caddr/rtl$ svn diff caddr.v 
Index: caddr.v
===================================================================
--- caddr.v	(revision 81)
+++ caddr.v	(working copy)
@@ -195,7 +195,7 @@
    reg [9:0] 	wadr;
 
    wire [7:0] 	aeqm_bits;
-   wire 	aeqm;
+   reg 		aeqm;
    wire [32:0] 	alu;
 
    wire 	divposlasttime, divsubcond, divaddcond;
@@ -627,7 +627,12 @@
 
    // 74181 pulls down AEB if not equal
    // aeqm is the simulated open collector
-   assign aeqm = aeqm_bits == { 8'b11111111 } ? 1'b1 : 1'b0;
+   //assign aeqm = aeqm_bits == { 8'b11111111 } ? 1'b1 : 1'b0;
+   always @(posedge clk)
+     if (reset)
+       aeqm <= 0;
+     else
+       aeqm <= aeqm_bits == { 8'b11111111 } ? 1'b1 : 1'b0;

--- ide.v	2011-09-08 17:42:28.327874652 -0400
+++ ide.v.new	2011-09-04 07:56:55.937655407 -0400
@@ -50,11 +50,16 @@
        ide_data_in_reg <= ide_data_in;
   
    // if write, drive ide_bus
+   reg [15:0] 	 reg_ata_in;
+
+   always @(posedge clk)
+     reg_ata_in <= ata_in;
+   
    assign ide_data_out = (ata_wr && (ata_state == s0 ||
 				     ata_state == s1 ||
 				     ata_state == s2 ||
-   				     ata_state == s3)) ? ata_in : 16'b0;
-
+   				     ata_state == s3)) ? reg_ata_in : 16'b0;
+   
    // assert cs & da during r/w cycle
    assign assert_cs = (ata_rd || ata_wr) && ata_state != s4;
    
